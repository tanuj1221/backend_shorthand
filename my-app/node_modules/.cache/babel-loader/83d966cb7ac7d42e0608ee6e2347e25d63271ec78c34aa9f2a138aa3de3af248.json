{"ast":null,"code":"var _jsxFileName = \"D:\\\\Academics\\\\M. Tech\\\\Shorthand nodejs-react-sqlite\\\\dotnet\\\\ShorthandBasicApp\\\\Backend\\\\Backend\\\\Backend-Steno\\\\my-app\\\\src\\\\components\\\\EditStudentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  if (studentId) {\n    // Only fetch if studentId is available\n    const fetchStudentData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/students/${studentId}`);\n        const studentData = response.data;\n        setStudentDetails({\n          firstName: studentData.firstName,\n          lastName: studentData.lastName,\n          motherName: studentData.motherName,\n          middleName: studentData.middleName,\n          studentId: studentData.studentId,\n          password: studentData.password,\n          image: studentData.image,\n          mobile_no: studentData.mobile_no,\n          email: studentData.email\n        });\n        setSelectedYear(studentData.batchYear);\n        setSelectedSemester(studentData.semester);\n        setSelectedSubjects(studentData.subjects.map(subject => subject.subjectId));\n        // Add other fields as necessary\n      } catch (error) {\n        console.error('Failed to fetch student data:', error);\n      }\n    };\n    fetchStudentData();\n  }\n}, [studentId]); // Retrieve student ID from URL\n\nconst EditStudentForm = () => {\n  _s();\n  const {\n    id: studentId\n  } = useParams();\n  const [studentDetails, setStudentDetails] = useState({\n    firstName: '',\n    lastName: '',\n    middleName: '',\n    motherName: '',\n    mobile_no: '',\n    email: ''\n    // Add other fields as necessary\n  });\n  useEffect(() => {\n    if (studentId) {\n      axios.get(`http://localhost:3000/students/${studentId}`).then(response => {\n        setStudentDetails(response.data); // Assuming the backend sends all necessary data\n      }).catch(error => {\n        console.error('Failed to fetch student data:', error);\n      });\n    }\n  }, [studentId]);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setStudentDetails(prevDetails => ({\n      ...prevDetails,\n      [name]: value\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.put(`http://localhost:3000/students/${studentId}`, studentDetails).then(response => {\n      alert('Student updated successfully!');\n    }).catch(error => {\n      console.error('Failed to update student:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: studentDetails.firstName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: studentDetails.lastName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Middle Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"middleName\",\n        value: studentDetails.middleName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Mother's Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"motherName\",\n        value: studentDetails.motherName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Mobile No:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"mobile_no\",\n        value: studentDetails.mobile_no,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: studentDetails.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(EditStudentForm, \"pNZvy8uTO/NyiLy1+3f9IPlGNEo=\", false, function () {\n  return [useParams];\n});\n_c = EditStudentForm;\nexport default EditStudentForm;\nvar _c;\n$RefreshReg$(_c, \"EditStudentForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","studentId","fetchStudentData","response","get","studentData","data","setStudentDetails","firstName","lastName","motherName","middleName","password","image","mobile_no","email","setSelectedYear","batchYear","setSelectedSemester","semester","setSelectedSubjects","subjects","map","subject","subjectId","error","console","EditStudentForm","_s","id","studentDetails","then","catch","handleChange","event","name","value","target","prevDetails","handleSubmit","preventDefault","put","alert","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Academics/M. Tech/Shorthand nodejs-react-sqlite/dotnet/ShorthandBasicApp/Backend/Backend/Backend-Steno/my-app/src/components/EditStudentForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n  useEffect(() => {\r\n    if (studentId) { // Only fetch if studentId is available\r\n      const fetchStudentData = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:3000/students/${studentId}`);\r\n          const studentData = response.data;\r\n          setStudentDetails({\r\n            firstName: studentData.firstName,\r\n            lastName: studentData.lastName,\r\n            motherName: studentData.motherName,\r\n            middleName: studentData.middleName,\r\n            studentId: studentData.studentId,\r\n            password: studentData.password,\r\n            image: studentData.image,\r\n            mobile_no: studentData.mobile_no,\r\n            email: studentData.email,\r\n          });\r\n          setSelectedYear(studentData.batchYear);\r\n          setSelectedSemester(studentData.semester);\r\n          setSelectedSubjects(studentData.subjects.map(subject => subject.subjectId));\r\n          // Add other fields as necessary\r\n        } catch (error) {\r\n          console.error('Failed to fetch student data:', error);\r\n        }\r\n      };\r\n\r\n      fetchStudentData();\r\n    }\r\n  }, [studentId]); // Retrieve student ID from URL\r\n\r\nconst EditStudentForm = () => {\r\n  const { id: studentId } = useParams();\r\n  const [studentDetails, setStudentDetails] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    middleName: '',\r\n    motherName: '',\r\n    mobile_no: '',\r\n    email: '',\r\n    // Add other fields as necessary\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (studentId) {\r\n      axios.get(`http://localhost:3000/students/${studentId}`)\r\n        .then(response => {\r\n          setStudentDetails(response.data); // Assuming the backend sends all necessary data\r\n        })\r\n        .catch(error => {\r\n          console.error('Failed to fetch student data:', error);\r\n        });\r\n    }\r\n  }, [studentId]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setStudentDetails(prevDetails => ({\r\n      ...prevDetails,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.put(`http://localhost:3000/students/${studentId}`, studentDetails)\r\n      .then(response => {\r\n        alert('Student updated successfully!');\r\n      })\r\n      .catch(error => {\r\n        console.error('Failed to update student:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        First Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={studentDetails.firstName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Last Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={studentDetails.lastName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Middle Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"middleName\"\r\n          value={studentDetails.middleName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Mother's Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"motherName\"\r\n          value={studentDetails.motherName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Mobile No:\r\n        <input\r\n          type=\"tel\"\r\n          name=\"mobile_no\"\r\n          value={studentDetails.mobile_no}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={studentDetails.email}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Update Student</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditStudentForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3CL,SAAS,CAAC,MAAM;EACd,IAAIM,SAAS,EAAE;IAAE;IACf,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,kCAAiCH,SAAU,EAAC,CAAC;QAC/E,MAAMI,WAAW,GAAGF,QAAQ,CAACG,IAAI;QACjCC,iBAAiB,CAAC;UAChBC,SAAS,EAAEH,WAAW,CAACG,SAAS;UAChCC,QAAQ,EAAEJ,WAAW,CAACI,QAAQ;UAC9BC,UAAU,EAAEL,WAAW,CAACK,UAAU;UAClCC,UAAU,EAAEN,WAAW,CAACM,UAAU;UAClCV,SAAS,EAAEI,WAAW,CAACJ,SAAS;UAChCW,QAAQ,EAAEP,WAAW,CAACO,QAAQ;UAC9BC,KAAK,EAAER,WAAW,CAACQ,KAAK;UACxBC,SAAS,EAAET,WAAW,CAACS,SAAS;UAChCC,KAAK,EAAEV,WAAW,CAACU;QACrB,CAAC,CAAC;QACFC,eAAe,CAACX,WAAW,CAACY,SAAS,CAAC;QACtCC,mBAAmB,CAACb,WAAW,CAACc,QAAQ,CAAC;QACzCC,mBAAmB,CAACf,WAAW,CAACgB,QAAQ,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,SAAS,CAAC,CAAC;QAC3E;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDvB,gBAAgB,CAAC,CAAC;EACpB;AACF,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC,CAAC,CAAC;;AAEnB,MAAM0B,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC,EAAE,EAAE5B;EAAU,CAAC,GAAGH,SAAS,CAAC,CAAC;EACrC,MAAM,CAACgC,cAAc,EAAEvB,iBAAiB,CAAC,GAAGX,QAAQ,CAAC;IACnDY,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,EAAE;IACdD,UAAU,EAAE,EAAE;IACdI,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;IACP;EACF,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACd,IAAIM,SAAS,EAAE;MACbJ,KAAK,CAACO,GAAG,CAAE,kCAAiCH,SAAU,EAAC,CAAC,CACrD8B,IAAI,CAAC5B,QAAQ,IAAI;QAChBI,iBAAiB,CAACJ,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,CACD0B,KAAK,CAACP,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACxB,SAAS,CAAC,CAAC;EAEf,MAAMgC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpC9B,iBAAiB,CAAC+B,WAAW,KAAK;MAChC,GAAGA,WAAW;MACd,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAIL,KAAK,IAAK;IAC9BA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtB3C,KAAK,CAAC4C,GAAG,CAAE,kCAAiCxC,SAAU,EAAC,EAAE6B,cAAc,CAAC,CACrEC,IAAI,CAAC5B,QAAQ,IAAI;MAChBuC,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC,CACDV,KAAK,CAACP,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EAED,oBACEzB,OAAA;IAAM2C,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAC3B5C,OAAA;MAAA4C,QAAA,GAAO,aAEL,eAAA5C,OAAA;QACE6C,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,WAAW;QAChBC,KAAK,EAAEN,cAAc,CAACtB,SAAU;QAChCsC,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlD,OAAA;MAAA4C,QAAA,GAAO,YAEL,eAAA5C,OAAA;QACE6C,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEN,cAAc,CAACrB,QAAS;QAC/BqC,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlD,OAAA;MAAA4C,QAAA,GAAO,cAEL,eAAA5C,OAAA;QACE6C,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,YAAY;QACjBC,KAAK,EAAEN,cAAc,CAACnB,UAAW;QACjCmC,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlD,OAAA;MAAA4C,QAAA,GAAO,gBAEL,eAAA5C,OAAA;QACE6C,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,YAAY;QACjBC,KAAK,EAAEN,cAAc,CAACpB,UAAW;QACjCoC,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlD,OAAA;MAAA4C,QAAA,GAAO,YAEL,eAAA5C,OAAA;QACE6C,IAAI,EAAC,KAAK;QACVV,IAAI,EAAC,WAAW;QAChBC,KAAK,EAAEN,cAAc,CAAChB,SAAU;QAChCgC,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlD,OAAA;MAAA4C,QAAA,GAAO,QAEL,eAAA5C,OAAA;QACE6C,IAAI,EAAC,OAAO;QACZV,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEN,cAAc,CAACf,KAAM;QAC5B+B,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlD,OAAA;MAAQ6C,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEX,CAAC;AAACtB,EAAA,CAtGID,eAAe;EAAA,QACO7B,SAAS;AAAA;AAAAqD,EAAA,GAD/BxB,eAAe;AAwGrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}